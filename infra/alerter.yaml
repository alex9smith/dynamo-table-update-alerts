AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: "DynamoDB table update alerter"

Parameters:
  TableStreamArn:
    Type: String
    Description: "DynamoDB table stream ARN"

  TopicArn:
    Type: String
    Description: "SNS topic ARN for alerts"

  TableName:
    Type: String
    Description: "DynamoDB table name"

  EncryptionKeyArn:
    Type: String
    Description: "KMS key ARN for SNS encryption"

Resources:
  DeadLetterQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub "${AWS::StackName}-dlq"
      MessageRetentionPeriod: 1209600 # 14 days
      Tags:
        - Key: Project
          Value: dynamo-table-update-alerts

  AlerterFunction:
    Type: AWS::Serverless::Function
    DependsOn: LogGroup
    Properties:
      CodeUri: ../src/
      Handler: alerter.handler
      Runtime: nodejs22.x
      Architectures:
        - arm64
      Timeout: 30
      MemorySize: 256
      DeadLetterQueue:
        Type: SQS
        TargetArn: !GetAtt DeadLetterQueue.Arn
      Environment:
        Variables:
          TOPIC_ARN: !Ref TopicArn
          TABLE_NAME: !Ref TableName
          LOG_LEVEL: INFO
          POWERTOOLS_SERVICE_NAME: dynamo-table-update-alerts
      Policies:
        - DynamoDBStreamReadPolicy:
            StreamName: !Select [3, !Split ["/", !Ref TableStreamArn]]
        - SNSPublishMessagePolicy:
            TopicName: !Select [5, !Split [":", !Ref TopicArn]]
        - SQSSendMessagePolicy:
            QueueName: !GetAtt DeadLetterQueue.QueueName
        - Statement:
            - Effect: Allow
              Action:
                - kms:GenerateDataKey
                - kms:Encrypt
              Resource: !Ref EncryptionKeyArn
      Tags:
        Project: dynamo-table-update-alerts
      Events:
        DynamoDBStream:
          Type: DynamoDB
          Properties:
            Stream: !Ref TableStreamArn
            StartingPosition: LATEST
            MaximumBatchingWindowInSeconds: 5
            BatchSize: 10
            MaximumRetryAttempts: 3

  LogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/lambda/${AlerterFunction}"
      RetentionInDays: 7
      Tags:
        - Key: Project
          Value: dynamo-table-update-alerts

  DLQAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub '${AWS::StackName}-dlq-messages'
      AlarmDescription: 'Alert when messages appear in the dead letter queue'
      MetricName: ApproximateNumberOfVisibleMessages
      Namespace: AWS/SQS
      Statistic: Sum
      Period: 300
      EvaluationPeriods: 1
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      Dimensions:
        - Name: QueueName
          Value: !GetAtt DeadLetterQueue.QueueName
      AlarmActions:
        - !Ref TopicArn
      Tags:
        - Key: Project
          Value: dynamo-table-update-alerts
